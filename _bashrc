# vim: set ft=sh:

# Jacob Degeling's .bashrc file
# me@jacobdegeling.com
export PATH=/usr/local/bin:/usr/local/sbin:/usr/local/share/npm/bin/:$PATH

if [ -f ~/bin ]; then
	export PATH=~/bin:$PATH
fi

export EDITOR=vim

# command colouring
export CLICOLOR=1
export GREP_OPTIONS='--color=auto'

# alias commands
alias ls='ls -h'
alias ll='ls -alFh'
alias la='ls -Ah'
alias l='ls -CF'

# define colors
C_DEFAULT="\[\033[m\]"
C_RESET="\[\033[0m\]"

C_BLACK="\[\033[0;30m\]"
C_RED="\[\033[0;31m\]"
C_GREEN="\[\033[0;32m\]"
C_YELLOW="\[\033[0;33m\]"
C_BLUE="\[\033[0;34m\]"
C_MAGENTA="\[\033[0;35m\]"
C_CYAN="\[\033[0;36m\]"
C_WHITE="\[\033[0;37m\]"

C_LIGHTBLACK="\[\033[1;30m\]"
C_LIGHTRED="\[\033[1;31m\]"
C_LIGHTGREEN="\[\033[1;32m\]"
C_LIGHTYELLOW="\[\033[1;33m\]"
C_LIGHTBLUE="\[\033[1;34m\]"
C_LIGHTMAGENTA="\[\033[1;35m\]"
C_LIGHTCYAN="\[\033[1;36m\]"
C_LIGHTWHITE="\[\033[1;37m\]"

C_BG_BLACK="\[\033[40m\]"
C_BG_RED="\[\033[41m\]"
C_BG_GREEN="\[\033[42m\]"
C_BG_YELLOW="\[\033[43m\]"
C_BG_BLUE="\[\033[44m\]"
C_BG_MAGENTA="\[\033[45m\]"
C_BG_CYAN="\[\033[46m\]"
C_BG_WHITE="\[\033[47m\]"

#############
#
# functions
#
#############

# show the git branch and status in the prompt (if available)
prompt_git() {
	git branch &>/dev/null || return 1
	HEAD="$(git symbolic-ref HEAD 2>/dev/null)"
	BRANCH="${HEAD##*/}"
	[[ -n "$(git status 2>/dev/null | grep -F 'working directory clean')" ]] || STATUS="*"
		printf "\033[m on \033[0;33m%s" "${BRANCH:-unknown}${STATUS}"
}

# wrapper for making a directory and changing to it in one go
md () { 
	mkdir -p $1 && cd $1
}

# change dir and then list contents
cl () {
	cd $1 && ls -lAh
}

# go back a directory level.
# todo: add a parameter that determines the level to go back, i.e.: bd 3 will
# be the same as cd ../../../
bd () {
	cd ..
}

#############
#
# Prompt like: Jake in ~ on (master*) $
#
#############

export PS1="$C_LIGHTBLUE\u$C_DEFAULT in $C_LIGHTBLUE\w"'$(prompt_git)'" $C_LIGHTGREEN\$$C_DEFAULT "

#############
#
# Command History settings
#
#############

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

export HISTIGNORE="clear:bg:fg:jobs:cd -:git status"

bind '"\e[A":history-search-backward'
bind '"\e[B":history-search-forward'

#############
#
# Source local bash settings
#
#############

if [ -f ~/.bashrc_local ]; then
	source ~/.bashrc_local
fi

